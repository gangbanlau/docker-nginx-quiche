worker_processes  1;

error_log  /dev/stdout warn;

events {
    worker_connections  1024;
}


http {
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;

    upstream app-upload {
      server app-upload:8080;
      keepalive 100;
      keepalive_requests 1000;
   }

    server {
        listen       80;
        #server_name  localhost;

        location / {
            proxy_pass http://app-upload;
        }
    }

    server {
        # Enable QUIC and HTTP/3.
        listen 443 quic reuseport;

        # Enable HTTP/2 (optional).
        listen 443 ssl http2;

        server_name _;

        ssl_certificate      /etc/ssl/certs/server.crt;
        ssl_certificate_key  /etc/ssl/private/server.key;

        # Enable all TLS versions (TLSv1.3 is required for QUIC).
        ssl_protocols TLSv1.2 TLSv1.3;

        # Add Alt-Svc header to negotiate HTTP/3.
        add_header alt-svc 'h3-27=":XX_PUBLISH_PORT_XX"; ma=86400,h3-28=":XX_PUBLISH_PORT_XX"; ma=86400,h3-29=":XX_PUBLISH_PORT_XX"; ma=86400,h3=":XX_PUBLISH_PORT_XX"; ma=86400';

        location /host {
            return 200 "http3 on $hostname";
            add_header Content-Type text/plain;
        }

        location / {
            proxy_pass http://app-upload;
            proxy_http_version  1.1;
            proxy_set_header Connection "";
            proxy_request_buffering off;
            proxy_read_timeout  600;

	    client_max_body_size 20m;
	    client_body_buffer_size 20m;
        }

    }
}
